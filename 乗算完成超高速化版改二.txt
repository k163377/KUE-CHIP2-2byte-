***改までの解説
**答えを格納するメモリーは手動で初期化して高速化
**SWAPする時は8回とかシフトすると上の桁は必ずオーバーフローするので、小さい方の上の桁は考慮しないようにして計算やロード/ストアを減らし高速化
**IXを小さい方の下の桁で固定しLD/ST省いて高速化
**Bシフトは下をシフト→上をローテートで高速化
**ループを分解してブランチを減らして高速化
**最初の時点でずらして0が発生する確率が低いことを利用してBZを省き平均的に高速化

***改二の解説
**加算部分は1つにし、そちらへ向けて飛ばすことで、ループをより多く分解して置けるようにして高速化け
**ついでにビットパターンの関係でLAST2へ飛べるのでベンチマークで高速化
**BAでループするが、最大8回しかシフトしない関係でそこまで上に飛ばす必要が無いので、LAST2へ飛ぶ可能性の高い場所へ飛ばして高速化


**ラベル
*小さい方
SMH: EQU 80H
SML: EQU 81H
*大きい方
BGH: EQU 82H
BGL: EQU 83H
*答えが入る場所
ASH: EQU 84H
ASL: EQU 85H

**比較開始
*上位
	LD	ACC,[SMH]
	LD	IX, [SML]
	CMP	ACC,[BGH]
	BN	CALC
	BNZ	SWAP
*下位
	CMP	IX, [BGL]
	BLE	CALC
	BA	SWAPL
*交換
SWAP:	ST	ACC,[BGH]
SWAPL:	LD	ACC,[BGL]
	ST	IX, [BGL]
	LD	IX,ACC

**計算開始
CALC:	SRL	IX
*キャリーが無いならそのままBをずらす
	BNC	BS
TOP:	RCF
	LD	ACC,[BGL]
	ADC	ACC,[ASL]
	ST	ACC,[ASL]
	LD	ACC,[BGH]
	ADC	ACC,[ASH]
	ST	ACC,[ASH]
*Bシフト
BS:	LD	ACC,[BGL]
	SLL	ACC
	ST	ACC,[BGL]
	LD	ACC,[BGH]
	RLA	ACC
	ST	ACC,[BGH]
*2回目
	SRL	IX
	BZ	LAST
*キャリーが無いならそのままBをずらす
	BC	TOP
*Bシフト
BS2:	LD	ACC,[BGL]
	SLL	ACC
	ST	ACC,[BGL]
	LD	ACC,[BGH]
	RLA	ACC
	ST	ACC,[BGH]
*3回目
	SRL	IX
	BZ	LAST2
*キャリーが無いならそのままBをずらす
	BC	TOP
*Bシフト
	LD	ACC,[BGL]
	SLL	ACC
	ST	ACC,[BGL]
	LD	ACC,[BGH]
	RLA	ACC
	ST	ACC,[BGH]
*4
	SRL	IX
	BZ	LAST2
	BC	TOP
*Bシフト
	LD	ACC,[BGL]
	SLL	ACC
	ST	ACC,[BGL]
	LD	ACC,[BGH]
	RLA	ACC
	ST	ACC,[BGH]
*5
	SRL	IX
	BZ	LAST2
	BC	TOP
*ここまで来た場合、それほど上に飛ばさなくても確実に終わるので、飛ばす先はLAST2に飛び安いBS2
	BA	BS2

**最終処理
LAST:	BNC	HLT
LAST2:	RCF
	LD	ACC,[BGL]
	ADC	ACC,[ASL]
	ST	ACC,[ASL]
	LD	ACC,[BGH]
	ADC	ACC,[ASH]
	ST	ACC,[ASH]
HLT:	HLT

END